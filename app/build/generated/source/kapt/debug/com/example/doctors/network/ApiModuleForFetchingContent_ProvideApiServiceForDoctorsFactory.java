// Generated by Dagger (https://google.github.io/dagger).
package com.example.doctors.network;

import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ApiModuleForFetchingContent_ProvideApiServiceForDoctorsFactory
    implements Factory<IContentDownloaderService> {
  private final ApiModuleForFetchingContent module;

  public ApiModuleForFetchingContent_ProvideApiServiceForDoctorsFactory(
      ApiModuleForFetchingContent module) {
    this.module = module;
  }

  @Override
  public IContentDownloaderService get() {
    return Preconditions.checkNotNull(
        module.provideApiServiceForDoctors(),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApiModuleForFetchingContent_ProvideApiServiceForDoctorsFactory create(
      ApiModuleForFetchingContent module) {
    return new ApiModuleForFetchingContent_ProvideApiServiceForDoctorsFactory(module);
  }

  public static IContentDownloaderService proxyProvideApiServiceForDoctors(
      ApiModuleForFetchingContent instance) {
    return Preconditions.checkNotNull(
        instance.provideApiServiceForDoctors(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
