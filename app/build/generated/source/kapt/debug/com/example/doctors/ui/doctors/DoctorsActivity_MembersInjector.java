// Generated by Dagger (https://google.github.io/dagger).
package com.example.doctors.ui.doctors;

import com.example.doctors.ui.doctors.helper.DoctorsHelper;
import com.squareup.picasso.Picasso;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class DoctorsActivity_MembersInjector implements MembersInjector<DoctorsActivity> {
  private final Provider<DoctorsPresenter> doctorsPresenterProvider;

  private final Provider<DoctorsHelper> doctorsHelperProvider;

  private final Provider<Picasso> picassoProvider;

  public DoctorsActivity_MembersInjector(
      Provider<DoctorsPresenter> doctorsPresenterProvider,
      Provider<DoctorsHelper> doctorsHelperProvider,
      Provider<Picasso> picassoProvider) {
    this.doctorsPresenterProvider = doctorsPresenterProvider;
    this.doctorsHelperProvider = doctorsHelperProvider;
    this.picassoProvider = picassoProvider;
  }

  public static MembersInjector<DoctorsActivity> create(
      Provider<DoctorsPresenter> doctorsPresenterProvider,
      Provider<DoctorsHelper> doctorsHelperProvider,
      Provider<Picasso> picassoProvider) {
    return new DoctorsActivity_MembersInjector(
        doctorsPresenterProvider, doctorsHelperProvider, picassoProvider);
  }

  @Override
  public void injectMembers(DoctorsActivity instance) {
    injectDoctorsPresenter(instance, doctorsPresenterProvider.get());
    injectDoctorsHelper(instance, doctorsHelperProvider.get());
    injectPicasso(instance, picassoProvider.get());
  }

  public static void injectDoctorsPresenter(
      DoctorsActivity instance, DoctorsPresenter doctorsPresenter) {
    instance.doctorsPresenter = doctorsPresenter;
  }

  public static void injectDoctorsHelper(DoctorsActivity instance, DoctorsHelper doctorsHelper) {
    instance.doctorsHelper = doctorsHelper;
  }

  public static void injectPicasso(DoctorsActivity instance, Picasso picasso) {
    instance.picasso = picasso;
  }
}
