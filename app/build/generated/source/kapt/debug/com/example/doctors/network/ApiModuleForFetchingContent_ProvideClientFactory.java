// Generated by Dagger (https://google.github.io/dagger).
package com.example.doctors.network;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.OkHttpClient;

public final class ApiModuleForFetchingContent_ProvideClientFactory
    implements Factory<OkHttpClient> {
  private final ApiModuleForFetchingContent module;

  public ApiModuleForFetchingContent_ProvideClientFactory(ApiModuleForFetchingContent module) {
    this.module = module;
  }

  @Override
  public OkHttpClient get() {
    return Preconditions.checkNotNull(
        module.provideClient(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static ApiModuleForFetchingContent_ProvideClientFactory create(
      ApiModuleForFetchingContent module) {
    return new ApiModuleForFetchingContent_ProvideClientFactory(module);
  }

  public static OkHttpClient proxyProvideClient(ApiModuleForFetchingContent instance) {
    return Preconditions.checkNotNull(
        instance.provideClient(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
